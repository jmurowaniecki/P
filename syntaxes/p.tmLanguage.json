{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "PdPaula",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#logic"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {

		"comments": {
			"begin": "(^\\s+)?(?<=^|\\W)(?<!-)(?=#)(?!#{)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.leading.shell"
				}
			},
			"end": "(?!\\G)",
			"patterns": [
				{
					"begin": "#!",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.shebang.shell"
						}
					},
					"end": "$",
					"name": "comment.line.number-sign.shebang.shell"
				},
				{
					"begin": "#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.shell"
						}
					},
					"end": "$",
					"name": "comment.line.number-sign.shell"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "\\b(ADICAO|ADICÃO|ADIÇAO|ADIÇÃO|ADICIONA|ADICIONAR|ADICIONE|DIMINUA|DIMINUI|DIMINUIR|DIVIDA|DIVIDE|DIVIDER|DIVIDIU|ENQUANTO|ENTAO|ENTÃO|ESCREVE|ESCREVENDO|ESCREVER|ESPERA|ESPERAR|ESPERE|EXECUTA|EXECUTAR|EXECUTE|LIMPA|LIMPAR|MULTIPLICA|MULTIPLICAR|MULTIPLICOU|MULTIPLIQUE|PERGUNTA|PERGUNTAR|PERGUNTE|PROCESSAR|PROCESSA|ITERAR|ITERA|REPETE|REPETI|REPETIR|REPITA|SE|SENAO|SENÃO|SERA|SERÁ|SOMA|SOMAR|SOME|SUBTRACAO|SUBTRAÇÃO|SUBTRAI|SUBTRAIR|VARIAVEL|VARIÁVEL)\\b"
				},
				{
					"name": "entity.name.function",
					"match": ".*\\(\\)"
				}
			]
		},
		"logic": {
			"patterns": [
				{
					"name": "keyword.control.logic",
					"match": "\\b(E|É|FOR|A|QUE|OU|NAO|NÃO|NEM|TEM|ESTA|ESTÁ|ESTAO|ESTÃO|COM|DEVE|SER)\\b"
				},
				{
					"name": "keyword.operator",
					"match": "\\b(VAZIO|MAIOR|MENOR|IGUAL)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "constant.character.escape",
					"match": "\\\\."
				},
				{
					"name": "string.quoted.single",
					"begin": "'",
					"end": "'"
				},
				{
					"name": "string.quoted.double",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"include": "#variables"
						}
					]
				},
				{
					"begin": "\\$?\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end"
						}
					},
					"name": "string.quoted.double.custom",
					"patterns": [
						{
							"match": "\\\\[\\$`\"\\\\\\n]",
							"name": "constant.character.escape"
						},
						{
							"include": "#variables"
						}
					]
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"match": "(\\$)[\\*|a-zA-Z_][a-zA-Z0-9_]*",
					"name": "variable"
				},

				{
					"begin": "\\b(VARIÁVEL|VARIAVEL)\\b",
					"beginCaptures": {
						"0": {
							"name": "keyword.control.function.custom"
						}
					},
					"end": "[a-zA-Z0-9_]*",
					"endCaptures": {
						"0": {
							"name": "variable.custom.declaration"
						}
					},
					"name": "variable.custom"
				}
			]
		}
	},
	"scopeName": "source.p"
}
